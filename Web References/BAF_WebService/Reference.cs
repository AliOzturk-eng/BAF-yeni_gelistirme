//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Tavlama.BAF_WebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BAF_WebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class BAF_WebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAnnealingEquipmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAnnealingEstimatedProcessEndingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAnnealingStateRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAnnealingWarehouseBatchesForLogisticOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSsysEquipmentListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSsysBatchListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSsysBafZoneDefinitionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateSsysWorkOrderOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BAF_WebService() {
            this.Url = global::Tavlama.Properties.Settings.Default.Tavlama_BAF_WebService_BAF_WebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAnnealingEquipmentsCompletedEventHandler GetAnnealingEquipmentsCompleted;
        
        /// <remarks/>
        public event GetAnnealingEstimatedProcessEndingCompletedEventHandler GetAnnealingEstimatedProcessEndingCompleted;
        
        /// <remarks/>
        public event GetAnnealingStateRecordsCompletedEventHandler GetAnnealingStateRecordsCompleted;
        
        /// <remarks/>
        public event GetAnnealingWarehouseBatchesForLogisticCompletedEventHandler GetAnnealingWarehouseBatchesForLogisticCompleted;
        
        /// <remarks/>
        public event GetSsysEquipmentListCompletedEventHandler GetSsysEquipmentListCompleted;
        
        /// <remarks/>
        public event GetSsysBatchListCompletedEventHandler GetSsysBatchListCompleted;
        
        /// <remarks/>
        public event GetSsysBafZoneDefinitionsCompletedEventHandler GetSsysBafZoneDefinitionsCompleted;
        
        /// <remarks/>
        public event CreateSsysWorkOrderCompletedEventHandler CreateSsysWorkOrderCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAnnealingEquipments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAnnealingEquipments(byte bytAnnealingEquipmentType) {
            object[] results = this.Invoke("GetAnnealingEquipments", new object[] {
                        bytAnnealingEquipmentType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAnnealingEquipmentsAsync(byte bytAnnealingEquipmentType) {
            this.GetAnnealingEquipmentsAsync(bytAnnealingEquipmentType, null);
        }
        
        /// <remarks/>
        public void GetAnnealingEquipmentsAsync(byte bytAnnealingEquipmentType, object userState) {
            if ((this.GetAnnealingEquipmentsOperationCompleted == null)) {
                this.GetAnnealingEquipmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAnnealingEquipmentsOperationCompleted);
            }
            this.InvokeAsync("GetAnnealingEquipments", new object[] {
                        bytAnnealingEquipmentType}, this.GetAnnealingEquipmentsOperationCompleted, userState);
        }
        
        private void OnGetAnnealingEquipmentsOperationCompleted(object arg) {
            if ((this.GetAnnealingEquipmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAnnealingEquipmentsCompleted(this, new GetAnnealingEquipmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAnnealingEstimatedProcessEnding", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAnnealingEstimatedProcessEnding() {
            object[] results = this.Invoke("GetAnnealingEstimatedProcessEnding", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAnnealingEstimatedProcessEndingAsync() {
            this.GetAnnealingEstimatedProcessEndingAsync(null);
        }
        
        /// <remarks/>
        public void GetAnnealingEstimatedProcessEndingAsync(object userState) {
            if ((this.GetAnnealingEstimatedProcessEndingOperationCompleted == null)) {
                this.GetAnnealingEstimatedProcessEndingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAnnealingEstimatedProcessEndingOperationCompleted);
            }
            this.InvokeAsync("GetAnnealingEstimatedProcessEnding", new object[0], this.GetAnnealingEstimatedProcessEndingOperationCompleted, userState);
        }
        
        private void OnGetAnnealingEstimatedProcessEndingOperationCompleted(object arg) {
            if ((this.GetAnnealingEstimatedProcessEndingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAnnealingEstimatedProcessEndingCompleted(this, new GetAnnealingEstimatedProcessEndingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAnnealingStateRecords", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAnnealingStateRecords() {
            object[] results = this.Invoke("GetAnnealingStateRecords", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAnnealingStateRecordsAsync() {
            this.GetAnnealingStateRecordsAsync(null);
        }
        
        /// <remarks/>
        public void GetAnnealingStateRecordsAsync(object userState) {
            if ((this.GetAnnealingStateRecordsOperationCompleted == null)) {
                this.GetAnnealingStateRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAnnealingStateRecordsOperationCompleted);
            }
            this.InvokeAsync("GetAnnealingStateRecords", new object[0], this.GetAnnealingStateRecordsOperationCompleted, userState);
        }
        
        private void OnGetAnnealingStateRecordsOperationCompleted(object arg) {
            if ((this.GetAnnealingStateRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAnnealingStateRecordsCompleted(this, new GetAnnealingStateRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAnnealingWarehouseBatchesForLogistic", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAnnealingWarehouseBatchesForLogistic() {
            object[] results = this.Invoke("GetAnnealingWarehouseBatchesForLogistic", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAnnealingWarehouseBatchesForLogisticAsync() {
            this.GetAnnealingWarehouseBatchesForLogisticAsync(null);
        }
        
        /// <remarks/>
        public void GetAnnealingWarehouseBatchesForLogisticAsync(object userState) {
            if ((this.GetAnnealingWarehouseBatchesForLogisticOperationCompleted == null)) {
                this.GetAnnealingWarehouseBatchesForLogisticOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAnnealingWarehouseBatchesForLogisticOperationCompleted);
            }
            this.InvokeAsync("GetAnnealingWarehouseBatchesForLogistic", new object[0], this.GetAnnealingWarehouseBatchesForLogisticOperationCompleted, userState);
        }
        
        private void OnGetAnnealingWarehouseBatchesForLogisticOperationCompleted(object arg) {
            if ((this.GetAnnealingWarehouseBatchesForLogisticCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAnnealingWarehouseBatchesForLogisticCompleted(this, new GetAnnealingWarehouseBatchesForLogisticCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSsysEquipmentList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSsysEquipmentList() {
            object[] results = this.Invoke("GetSsysEquipmentList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSsysEquipmentListAsync() {
            this.GetSsysEquipmentListAsync(null);
        }
        
        /// <remarks/>
        public void GetSsysEquipmentListAsync(object userState) {
            if ((this.GetSsysEquipmentListOperationCompleted == null)) {
                this.GetSsysEquipmentListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSsysEquipmentListOperationCompleted);
            }
            this.InvokeAsync("GetSsysEquipmentList", new object[0], this.GetSsysEquipmentListOperationCompleted, userState);
        }
        
        private void OnGetSsysEquipmentListOperationCompleted(object arg) {
            if ((this.GetSsysEquipmentListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSsysEquipmentListCompleted(this, new GetSsysEquipmentListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSsysBatchList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSsysBatchList(string strBatchNumber) {
            object[] results = this.Invoke("GetSsysBatchList", new object[] {
                        strBatchNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSsysBatchListAsync(string strBatchNumber) {
            this.GetSsysBatchListAsync(strBatchNumber, null);
        }
        
        /// <remarks/>
        public void GetSsysBatchListAsync(string strBatchNumber, object userState) {
            if ((this.GetSsysBatchListOperationCompleted == null)) {
                this.GetSsysBatchListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSsysBatchListOperationCompleted);
            }
            this.InvokeAsync("GetSsysBatchList", new object[] {
                        strBatchNumber}, this.GetSsysBatchListOperationCompleted, userState);
        }
        
        private void OnGetSsysBatchListOperationCompleted(object arg) {
            if ((this.GetSsysBatchListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSsysBatchListCompleted(this, new GetSsysBatchListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSsysBafZoneDefinitions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSsysBafZoneDefinitions() {
            object[] results = this.Invoke("GetSsysBafZoneDefinitions", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSsysBafZoneDefinitionsAsync() {
            this.GetSsysBafZoneDefinitionsAsync(null);
        }
        
        /// <remarks/>
        public void GetSsysBafZoneDefinitionsAsync(object userState) {
            if ((this.GetSsysBafZoneDefinitionsOperationCompleted == null)) {
                this.GetSsysBafZoneDefinitionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSsysBafZoneDefinitionsOperationCompleted);
            }
            this.InvokeAsync("GetSsysBafZoneDefinitions", new object[0], this.GetSsysBafZoneDefinitionsOperationCompleted, userState);
        }
        
        private void OnGetSsysBafZoneDefinitionsOperationCompleted(object arg) {
            if ((this.GetSsysBafZoneDefinitionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSsysBafZoneDefinitionsCompleted(this, new GetSsysBafZoneDefinitionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateSsysWorkOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateSsysWorkOrder(int intVincId, string strPartiNo, string strObjeNo, string strObjeTipi, string strEmirTipi, string strAlHat, string strBrkHat, string strAciklama) {
            this.Invoke("CreateSsysWorkOrder", new object[] {
                        intVincId,
                        strPartiNo,
                        strObjeNo,
                        strObjeTipi,
                        strEmirTipi,
                        strAlHat,
                        strBrkHat,
                        strAciklama});
        }
        
        /// <remarks/>
        public void CreateSsysWorkOrderAsync(int intVincId, string strPartiNo, string strObjeNo, string strObjeTipi, string strEmirTipi, string strAlHat, string strBrkHat, string strAciklama) {
            this.CreateSsysWorkOrderAsync(intVincId, strPartiNo, strObjeNo, strObjeTipi, strEmirTipi, strAlHat, strBrkHat, strAciklama, null);
        }
        
        /// <remarks/>
        public void CreateSsysWorkOrderAsync(int intVincId, string strPartiNo, string strObjeNo, string strObjeTipi, string strEmirTipi, string strAlHat, string strBrkHat, string strAciklama, object userState) {
            if ((this.CreateSsysWorkOrderOperationCompleted == null)) {
                this.CreateSsysWorkOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateSsysWorkOrderOperationCompleted);
            }
            this.InvokeAsync("CreateSsysWorkOrder", new object[] {
                        intVincId,
                        strPartiNo,
                        strObjeNo,
                        strObjeTipi,
                        strEmirTipi,
                        strAlHat,
                        strBrkHat,
                        strAciklama}, this.CreateSsysWorkOrderOperationCompleted, userState);
        }
        
        private void OnCreateSsysWorkOrderOperationCompleted(object arg) {
            if ((this.CreateSsysWorkOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateSsysWorkOrderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAnnealingEquipmentsCompletedEventHandler(object sender, GetAnnealingEquipmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAnnealingEquipmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAnnealingEquipmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAnnealingEstimatedProcessEndingCompletedEventHandler(object sender, GetAnnealingEstimatedProcessEndingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAnnealingEstimatedProcessEndingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAnnealingEstimatedProcessEndingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAnnealingStateRecordsCompletedEventHandler(object sender, GetAnnealingStateRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAnnealingStateRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAnnealingStateRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAnnealingWarehouseBatchesForLogisticCompletedEventHandler(object sender, GetAnnealingWarehouseBatchesForLogisticCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAnnealingWarehouseBatchesForLogisticCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAnnealingWarehouseBatchesForLogisticCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetSsysEquipmentListCompletedEventHandler(object sender, GetSsysEquipmentListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSsysEquipmentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSsysEquipmentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetSsysBatchListCompletedEventHandler(object sender, GetSsysBatchListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSsysBatchListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSsysBatchListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetSsysBafZoneDefinitionsCompletedEventHandler(object sender, GetSsysBafZoneDefinitionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSsysBafZoneDefinitionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSsysBafZoneDefinitionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CreateSsysWorkOrderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591